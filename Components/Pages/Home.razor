@page "/"
@inject GamesClient Client

 <!--shows a loading indicator when the page is loading-->
@attribute [StreamRendering]

<PageTitle>Game Catalog</PageTitle>

<div class = "mt-2">
    <a class = "btn btn-primary" role = "button" href ="/editgame">New Game</a>

</div>
@if (games is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class = "table table-striped table-bordered table-hover mt-3">
        <thead class = "table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th class = "text-end">Price</th>
            <th>Release Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td class = "text-end">@game.Price.ToString("C2")</td>
                    <td>@game.ReleaseDate</td>
                    <td>
                        <!--d-flex ensures the buttons stay next to each other when screen window size is changed-->
                        <div class = "d-flex">
                            <a class = "btn btn-primary me-2" role = "button" href = "@GameUrl(game.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <!--the danger button is a red button we will use to indiciate deletion-->
                            <button class = "btn btn-danger"
                            data-bs-toggle = "modal"
                            data-bs-target = "@GetDeleteModalId(game)">
                            <i class="bi bi-trash3"></i>
                            </button>
                        </div>
                        <DeleteGame Game = "@game" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code
{  
    private GameSummary[]? games;

    protected override async Task OnInitializedAsync()
    {
        games = await Client.GetGamesAsync();
    }

    private static string GameUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameSummary game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}
